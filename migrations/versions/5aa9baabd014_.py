"""empty message

Revision ID: 5aa9baabd014
Revises: 
Create Date: 2017-02-07 14:05:35.555817

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5aa9baabd014'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('package',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('owner', mysql.VARCHAR(collation='utf8_bin', length=64), nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8_bin', length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_package', 'package', ['owner', 'name'], unique=True)
    op.create_table('access',
    sa.Column('package_id', sa.BigInteger(), nullable=False),
    sa.Column('user', mysql.VARCHAR(collation='utf8_bin', length=64), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('package_id', 'user')
    )
    op.create_table('blob',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('package_id', sa.BigInteger(), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_blob', 'blob', ['package_id', 'hash'], unique=True)
    op.create_table('log',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('package_id', sa.BigInteger(), nullable=False),
    sa.Column('blob_id', sa.BigInteger(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('author', mysql.VARCHAR(collation='utf8_bin', length=64), nullable=False),
    sa.ForeignKeyConstraint(['blob_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_log_package_id'), 'log', ['package_id'], unique=False)
    op.create_table('tag',
    sa.Column('package_id', sa.BigInteger(), nullable=False),
    sa.Column('tag', mysql.VARCHAR(collation='utf8_bin', length=64), nullable=False),
    sa.Column('blob_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['blob_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('package_id', 'tag')
    )
    op.create_table('version',
    sa.Column('package_id', sa.BigInteger(), nullable=False),
    sa.Column('version', mysql.VARCHAR(collation='utf8_bin', length=64), nullable=False),
    sa.Column('blob_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['blob_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['package.id'], ),
    sa.PrimaryKeyConstraint('package_id', 'version')
    )
    # ### end Alembic commands ###


def downgrade():
    assert False  # Just in case...

    op.drop_table('version')
    op.drop_table('tag')
    op.drop_table('log')
    op.drop_table('blob')
    op.drop_table('access')
    op.drop_table('package')
