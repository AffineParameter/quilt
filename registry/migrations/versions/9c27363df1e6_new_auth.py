"""New auth

Revision ID: 9c27363df1e6
Revises: 96922536e019
Create Date: 2018-06-07 17:06:26.041939

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9c27363df1e6'
down_revision = '96922536e019'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('old_id', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('activation_token',
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('token', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'token')
    )
    op.create_table('code',
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('code', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('password_reset_token',
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('token', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'token')
    )
    op.create_table('token',
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('token', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'token')
    )
    op.drop_table('corsheaders_corsmodel')
    op.drop_table('auth_user_groups')
    op.drop_table('auth_group')
    op.drop_table('oauth2_provider_refreshtoken')
    op.drop_table('oauth2_provider_accesstoken')
    op.drop_table('registration_registrationprofile')
    op.drop_table('auth_group_permissions')
    op.drop_table('oauth2_provider_application')
    op.drop_table('django_migrations')
    op.drop_table('auth_permission')
    op.drop_table('oauth2_provider_grant')
    op.drop_table('django_admin_log')
    op.drop_table('auth_user_user_permissions')
    op.drop_table('auth_user')
    op.drop_table('django_session')
    op.drop_table('django_content_type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('django_content_type_id_seq'::regclass)"), nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_45f3b1d93ec8c61c_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    )
    op.create_table('auth_user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('auth_user_id_seq'::regclass)"), nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_user_pkey'),
    sa.UniqueConstraint('username', name='auth_user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_user_user_permissions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_user__permission_id_384b62483d7071f0_fk_auth_permission_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_user_permiss_user_id_7f0938558328534a_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_user_permissions_pkey'),
    sa.UniqueConstraint('user_id', 'permission_id', name='auth_user_user_permissions_user_id_permission_id_key')
    )
    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='djan_content_type_id_697914295151027a_fk_django_content_type_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='django_admin_log_user_id_52fdd58701c5f563_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
    )
    op.create_table('oauth2_provider_grant',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('expires', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('redirect_uri', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('scope', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['oauth2_provider_application.id'], name='ed9fd5eb4f62c9b049823c4a9799fadb', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='oauth2_provider_grant_user_id_3111344894d452da_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='oauth2_provider_grant_pkey')
    )
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('auth_permission_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_content_type_id_508cf46651277a81_fk_django_content_type_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_migrations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    op.create_table('oauth2_provider_application',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('oauth2_provider_application_id_seq'::regclass)"), nullable=False),
    sa.Column('client_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('redirect_uris', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('client_type', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('authorization_grant_type', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('client_secret', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('skip_authorization', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='oauth2_provider_applic_user_id_7fa13387c260b798_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='oauth2_provider_application_pkey'),
    sa.UniqueConstraint('client_id', name='oauth2_provider_application_client_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissio_group_id_689710a9a73b7457_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_key')
    )
    op.create_table('registration_registrationprofile',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('activation_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='registration_registrati_user_id_e84782b3f7685bb_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='registration_registrationprofile_pkey'),
    sa.UniqueConstraint('user_id', name='registration_registrationprofile_user_id_key')
    )
    op.create_table('oauth2_provider_accesstoken',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('oauth2_provider_accesstoken_id_seq'::regclass)"), nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('expires', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('scope', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['oauth2_provider_application.id'], name='a17250f96ea449de36002be9c6c6acfb', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='oauth2_provider_access_user_id_5e2f004fdebea22d_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='oauth2_provider_accesstoken_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('oauth2_provider_refreshtoken',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('access_token_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('application_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['access_token_id'], ['oauth2_provider_accesstoken.id'], name='D9aead397b25d8154e554023da34d33b', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['application_id'], ['oauth2_provider_application.id'], name='da2196e2988877260c8db8e9bb03265e', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='oauth2_provider_refres_user_id_3f695b639cfbc9a3_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='oauth2_provider_refreshtoken_pkey'),
    sa.UniqueConstraint('access_token_id', name='oauth2_provider_refreshtoken_access_token_id_key')
    )
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('auth_group_id_seq'::regclass)"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_user_groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_user_groups_group_id_33ac548dcf5f8e37_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_groups_user_id_4b5ed4ffdb8fd9b0_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_groups_pkey'),
    sa.UniqueConstraint('user_id', 'group_id', name='auth_user_groups_user_id_group_id_key')
    )
    op.create_table('corsheaders_corsmodel',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('cors', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='corsheaders_corsmodel_pkey')
    )
    op.drop_table('token')
    op.drop_table('password_reset_token')
    op.drop_table('code')
    op.drop_table('activation_token')
    op.drop_table('user')
    # ### end Alembic commands ###
